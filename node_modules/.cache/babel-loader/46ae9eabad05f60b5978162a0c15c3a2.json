{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aleksandre\\\\frontend\\\\src\\\\components\\\\containers\\\\TaskContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchTaskThunk } from \"../../store/thunks\";\nimport { TaskView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TaskContainer extends Component {\n  componentDidMount() {\n    //getting task ID from url\n    this.props.fetchTask(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(TaskView, {\n      task: this.props.task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n} // map state to props\n\n\nconst mapState = state => {\n  return {\n    task: state.task\n  };\n}; // map dispatch to props\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchTask: id => dispatch(fetchTaskThunk(id))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(TaskContainer);","map":{"version":3,"names":["React","Component","connect","fetchTaskThunk","TaskView","TaskContainer","componentDidMount","props","fetchTask","match","params","id","render","task","mapState","state","mapDispatch","dispatch"],"sources":["C:/Users/Aleksandre/frontend/src/components/containers/TaskContainer.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTaskThunk } from \"../../store/thunks\";\r\nimport { TaskView } from \"../views\";\r\n\r\nclass TaskContainer extends Component {\r\n  componentDidMount() {\r\n    //getting task ID from url\r\n    this.props.fetchTask(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TaskView \r\n        task={this.props.task}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n// map state to props\r\nconst mapState = (state) => {\r\n  return {\r\n    task: state.task,\r\n  };\r\n};\r\n\r\n// map dispatch to props\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    fetchTask: (id) => dispatch(fetchTaskThunk(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(TaskContainer);"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,QAAT,QAAyB,UAAzB;;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;EACpCK,iBAAiB,GAAG;IAClB;IACA,KAAKC,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C;EACD;;EAEDC,MAAM,GAAG;IACP,oBACE,QAAC,QAAD;MACE,IAAI,EAAE,KAAKL,KAAL,CAAWM;IADnB;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;AAZmC,C,CAetC;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAC1B,OAAO;IACLF,IAAI,EAAEE,KAAK,CAACF;EADP,CAAP;AAGD,CAJD,C,CAMA;;;AACA,MAAMG,WAAW,GAAIC,QAAD,IAAc;EAChC,OAAO;IACLT,SAAS,EAAGG,EAAD,IAAQM,QAAQ,CAACd,cAAc,CAACQ,EAAD,CAAf;EADtB,CAAP;AAGD,CAJD;;AAMA,eAAeT,OAAO,CAACY,QAAD,EAAWE,WAAX,CAAP,CAA+BX,aAA/B,CAAf"},"metadata":{},"sourceType":"module"}