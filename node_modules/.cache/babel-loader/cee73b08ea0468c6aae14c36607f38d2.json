{"ast":null,"code":"import * as ac from './actions/actionCreators';\n\nconst axios = require('axios'); //PATH (should be where your server is running)\n\n\nlet path = \"http://localhost:5001/api\"; // THUNKS\n//All employees\n\nexport const fetchAllEmployeesThunk = () => async dispatch => {\n  try {\n    let res = await axios.get(`${path}/employees`);\n    dispatch(ac.fetchAllEmployees(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; //Single employee\n\nexport const fetchEmployeeThunk = id => async dispatch => {\n  // thunk creator would not an be async function \n  // if using Promise.then:\n  // return axios\n  //   .get(`${path}/api/employees/${id}`)\n  //   .then((res) => res.data)\n  //   .then((employee) => dispatch(ac.fetchEmployee(employee)))\n  //   .catch((err) => console.log(err));\n  try {\n    let res = await axios.get(`${path}/employees/${id}`);\n    dispatch(ac.fetchEmployee(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; //All tasks\n\nexport const fetchAllTasksThunk = () => async dispatch => {\n  try {\n    let res = await axios.get(`${path}/tasks`);\n    dispatch(ac.fetchAllTasks(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const addTaskThunk = task => async dispatch => {\n  // task = { title: \"CSCI 127\" }\n  try {\n    let res = await axios.post(`${path}/tasks`, task);\n    dispatch(ac.addTask(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const deleteTaskThunk = taskId => async dispatch => {\n  try {\n    await axios.delete(`${path}/tasks/${taskId}`); //delete succesful so change state with dispatch\n\n    dispatch(ac.deleteTask(taskId));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const editTaskThunk = task => async dispatch => {\n  try {\n    let res = await axios.put(`${path}/tasks/${task.id}`, task); //res.data is the updated task object\n\n    dispatch(ac.editTask(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; //Single task\n\nexport const fetchTaskThunk = id => async dispatch => {\n  try {\n    let res = await axios.get(`${path}/tasks/${id}`);\n    dispatch(ac.fetchTask(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"names":["ac","axios","require","path","fetchAllEmployeesThunk","dispatch","res","get","fetchAllEmployees","data","err","console","error","fetchEmployeeThunk","id","fetchEmployee","fetchAllTasksThunk","fetchAllTasks","addTaskThunk","task","post","addTask","deleteTaskThunk","taskId","delete","deleteTask","editTaskThunk","put","editTask","fetchTaskThunk","fetchTask"],"sources":["C:/Users/Aleksandre/frontend/src/store/thunks.js"],"sourcesContent":["import * as ac from './actions/actionCreators';\r\nconst axios = require('axios');\r\n\r\n//PATH (should be where your server is running)\r\nlet path = \"http://localhost:5001/api\";\r\n\r\n// THUNKS\r\n\r\n//All employees\r\nexport const fetchAllEmployeesThunk = () => async (dispatch) => {\r\n  try {\r\n    let res = await axios.get(`${path}/employees`);\r\n    dispatch(ac.fetchAllEmployees(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n//Single employee\r\nexport const fetchEmployeeThunk = (id) => async (dispatch) => {\r\n  // thunk creator would not an be async function \r\n  // if using Promise.then:\r\n  // return axios\r\n  //   .get(`${path}/api/employees/${id}`)\r\n  //   .then((res) => res.data)\r\n  //   .then((employee) => dispatch(ac.fetchEmployee(employee)))\r\n  //   .catch((err) => console.log(err));\r\n  try {\r\n    let res = await axios.get(`${path}/employees/${id}`);\r\n    dispatch(ac.fetchEmployee(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n//All tasks\r\nexport const fetchAllTasksThunk = () => async (dispatch) => {\r\n  try {\r\n    let res = await axios.get(`${path}/tasks`);\r\n    dispatch(ac.fetchAllTasks(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const addTaskThunk = (task) => async (dispatch) => {\r\n  // task = { title: \"CSCI 127\" }\r\n  try {\r\n    let res = await axios.post(`${path}/tasks`, task);\r\n    dispatch(ac.addTask(res.data));\r\n    return res.data;\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const deleteTaskThunk = taskId => async dispatch => {\r\n  try {\r\n    await axios.delete(`${path}/tasks/${taskId}`);\r\n    //delete succesful so change state with dispatch\r\n    dispatch(ac.deleteTask(taskId));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const editTaskThunk = task => async dispatch => {\r\n  try {\r\n    let res = await axios.put(`${path}/tasks/${task.id}`, task);\r\n    //res.data is the updated task object\r\n    dispatch(ac.editTask(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n//Single task\r\nexport const fetchTaskThunk = id => async dispatch => {\r\n  try {\r\n    let res = await axios.get(`${path}/tasks/${id}`);\r\n    dispatch(ac.fetchTask(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}